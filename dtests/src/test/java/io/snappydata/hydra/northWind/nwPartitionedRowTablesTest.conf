hydra.Prms-testRequirement = "Test to verify Partitioned Row tables functionality using north wind schema, data and queries";
hydra.Prms-testDescription = "
This test starts the snappy cluster and spark cluster.
Test then runs the spark App for creating and loading data in Partitioned row tables using northWind schema and data.
it then executes the snappy job and sql script in parallel.
Snappy job executes and validate the northWind queries on the tables created and loaded through split mode.
sql script only executes the northWind queries on the tables created and loaded through split mode.";

INCLUDE $JTESTS/io/snappydata/hydra/northWind/startDualModeCluster.conf;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSparkJob
            io.snappydata.hydra.cluster.SnappyPrms-sparkJobClassNames = io.snappydata.hydra.northWind.CreateAndLoadNWTablesSparkApp
            io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = "${dataFilesLocation} ${tableType}"
            threadGroups = snappyThreads
            ;

TASK        taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.northWind.ValidateNWQueriesJob
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "tableType=${tableType}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = leadThreads;

TASK        taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
            io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = nw_queries.sql
            threadGroups = snappyThreads
            ;

INCLUDE $JTESTS/io/snappydata/hydra/northWind/stopDualModeCluster.conf;
